#include "cmysqlsession.h"

const std::string dbname    = "airline";
const std::string dbhost    = "47.88.28.30";
const std::string username  = "root";
const std::string password  = "lf19820416";

int CMysqlSession::connectDB()
{
	connection = mysql_real_connect(&mysql, dbhost.c_str(), username.c_str(), password.c_str(), dbname.c_str(), 0, 0, 0);

	if (connection == NULL)
	{
		return -1;
	}

	return 0;
}

int CMysqlSession::insertData(std::string sql)
{
	int state = mysql_query(connection, sql.c_str());
	if (state != 0)
	{
		return state;
	}
	
	return 0;
}

std::vector<std::string> CMysqlSession::executeSQL(std::string sql)
{
	MYSQL_RES *result;
	MYSQL_ROW row;

	std::vector<std::string> tables;

	int state = mysql_query(connection, sql.c_str());
	if (state !=0)
	{
		return tables;
	}

	result = mysql_store_result(connection);
	unsigned int num_fields = mysql_num_fields(result);

	while ( ( row=mysql_fetch_row(result)) != NULL )
	{
		std::string line;
		for (int i = 0; i < num_fields; ++i)
		{
			line += row[i];
			line += "\t";
		}

		tables.push_back(line);
	}

	mysql_free_result(result);

	return tables;
}

std::vector<Flight> CMysqlSession::fetchFlightInfo(std::string sql)
{
	MYSQL_RES *result;
	MYSQL_ROW row;

	std::vector<Flight> tables;

	int state = mysql_query(connection, sql.c_str());
	if (state !=0)
	{
		return tables;
	}

	result = mysql_store_result(connection);
	unsigned int num_fields = mysql_num_fields(result);

	while ( ( row=mysql_fetch_row(result)) != NULL )
	{
		Flight flight;
		flight.flightId 	= row[0];
    	flight.flightNum 	= row[1];
    	flight.departDay	= row[2];

    	flight.departHour	= row[3];
    	flight.departMin	= row[4];
    	flight.source		= row[5];
    	flight.destination	= row[6];
    	flight.seatNum 		= row[7];
    	flight.reservedSeatNum = row[8];

		tables.push_back(flight);
	}

	mysql_free_result(result);

	return tables;
}

int CMysqlSession::executeDelSQL(std::string sql)
{
	int state = mysql_query(connection, sql.c_str());
	if (state != 0)
	{
		return state;
	}
	
	return 0;
}
